local COMMON = require "libs.common"
local SCRIPTS = require "libs.scripts.scripts_container"
local GUI_FOLLOW_GO = require "libs.scripts.gui_follow_go_gui_script"
local WORLD = require "world.world"

---@class selfRoomGui

---@param self selfRoomGui
local function building_state_changed(self)
	if self.building and  self.state ~= self.building.state then
		self.state = self.building.state
		if self.state == self.building.STATES.HIDE then
			gui.set_enabled(self.build, false)
			gui.set_enabled(self.not_build, false)
			msg.post("/main_asteroid/room" .. self.slot .."_tiles",COMMON.HASHES.MSG_DISABLE)
		elseif self.state == self.building.STATES.NOT_BUILD then
			gui.set_enabled(self.build, false)
			gui.set_enabled(self.not_build, true)
			msg.post("/main_asteroid/room" .. self.slot .."_tiles",COMMON.HASHES.MSG_DISABLE)
		elseif self.state == self.building.STATES.BUILD then
			gui.set_enabled(self.build, true)
			gui.set_enabled(gui.get_node("build/icon"), false)
			gui.set_enabled(self.not_build, false)
			msg.post("/main_asteroid/room" .. self.slot .."_tiles",COMMON.HASHES.MSG_ENABLE)
		end
	end
end

---@param self selfRoomGui
function init(self)
	self.scripts = SCRIPTS()
	self.follow_script = GUI_FOLLOW_GO(gui.get_node("root"))
	self.scripts:add_script(self.follow_script)
	self.scripts:init(self)

	self.click_area = gui.get_node("click_area")
	self.not_build = gui.get_node("not_build")
	self.build = gui.get_node("build")
	self.build_clock = gui.get_node("build/clock")


	gui.set_enabled(self.build, false)
	gui.set_enabled(self.not_build, false)


	COMMON.INPUT.acquire()
	self.input = COMMON.INPUT()
	self.input:add(COMMON.HASHES.INPUT_TOUCH,function(_,action_id,action)
		if gui.pick_node(self.click_area,action.x,action.y) then
			WORLD:click_slot(self.slot)
		end
	end,true)
end

---@param self selfRoomGui
function final(self)
	self.scripts:final(self)
	COMMON.INPUT.release()
end

---@param self selfRoomGui
function update(self, dt)
	self.scripts:update(self,dt)
	building_state_changed(self)
	gui.set_fill_angle(self.build_clock,-360 * self.building.e.time/self.building.e.total_time)
end

---@param self selfRoomGui
function on_message(self, message_id, message, sender)
	self.scripts:on_message(self, message_id,message,sender)
	if message_id == hash("set_slot") then
		self.slot = message.slot
		msg.post("/main_asteroid/room" .. self.slot .."_tiles",COMMON.HASHES.MSG_DISABLE)
		self.building = WORLD.buildings[self.slot]
	end	
end

---@param self selfRoomGui
function on_input(self, action_id, action)
	self.scripts:on_input(self,action_id,action)
	self.input:on_input(self,action_id,action)
end

---@param self selfRoomGui
function on_reload(self)
	self.scripts:on_reload(self)
end
