local COMMON = require "libs.common"
local WORLD = require "world.world"
local RichText = require "richtext.richtext"
local TextSettings = require "world.text_settings"

---@class SelfMainG

---@param self SelfMainG
function init(self)
	self.energy_lbl = gui.get_node("energy_lbl")
	self.ore_lbl = gui.get_node("ore_lbl")
	self.steel_lbl = gui.get_node("steel_lbl")
	self.tech_lbl = gui.get_node("tech_lbl")
	self.task_title_lbl = gui.get_node("task_title_lbl")
	self.task_description_lbl = gui.get_node("task_description_lbl")

	self.task_title_settings = TextSettings.base_center({parent = self.task_title_lbl,color = vmath.vector4(1,1,1,1)})
	self.task_description_settings = TextSettings.base_left({parent = self.task_description_lbl,color = vmath.vector4(1,1,1,1)})
end

---@param self SelfMainG
function final(self)
end
---@param self SelfMainG
function update(self, dt)
	gui.set_text(self.energy_lbl,"Energy:" .. WORLD.resources.energy)
	gui.set_text(self.ore_lbl,"Ore:" .. WORLD.resources.ore)
	gui.set_text(self.steel_lbl,"Steel:" .. WORLD.resources.steel)
	gui.set_text(self.tech_lbl,"Tech:" .. WORLD.resources.tech)

	if self.task_title ~=  WORLD.tasks:get_current():get_title() then
		self.task_title  =  WORLD.tasks:get_current():get_title()
		for _,w in ipairs(self.title_words or {})do
			gui.delete_node(w.node)
		end
		--self.title_words = RichText.create(self.task_title,"Roboto",self.task_title_settings)
	end
	if self.task_description ~=  WORLD.tasks:get_current():get_description() then
		self.task_description = WORLD.tasks:get_current():get_description()
		for _,w in ipairs(self.description_words or {})do
			gui.delete_node(w.node)
		end
		self.description_words = RichText.create(self.task_description,"Roboto",self.task_description_settings)
	end
	--gui.set_text(self.task_description_lbl,WORLD.tasks:get_current():get_description())

end
---@param self SelfMainG
function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end
---@param self SelfMainG
function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end
---@param self SelfMainG
function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
