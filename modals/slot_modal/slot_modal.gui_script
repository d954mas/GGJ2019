local COMMON = require "libs.common"
local SM = require "Jester.jester"
local WORLD = require "world.world"
local GUI = require "gui.gui"

---@class SelfSlotModalGui

---@param self SelfSlotModalGui
function init(self)
	gui.set_render_order(2)
	self.title = gui.get_node("lbl_name")
	self.root = gui.get_node("root")
	self.building = WORLD.buildings[COMMON.GLOBAL.slot]
	gui.set_text(self.title,WORLD.locale["BUILDING_" ..  COMMON.GLOBAL.slot])
	gui.animate(self.root,gui.PROP_SCALE,vmath.vector3(1),gui.EASING_INSINE,0.5,0,function ()
		COMMON.INPUT.acquire()
	end)

	self.hp_bar = GUI.ProgressBar({ root = gui.get_node("hp_bar/bar"), background = gui.get_node("hp_bar/background"),
									label = gui.get_node("hp_bar/lbl") })
	self.hp_bar:set_max_value(1)
end
---@param self SelfSlotModalGui
function final(self)
	COMMON.INPUT.release()
end
---@param self SelfSlotModalGui
function update(self, dt)
	self.hp_bar:set_progress(self.building.e.hp)
	print(self.building.e.hp)
end
---@param self SelfSlotModalGui
function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end
---@param self SelfSlotModalGui
function on_input(self, action_id, action)
	if action_id == COMMON.HASHES.INPUT_TOUCH and action.pressed then
		if gui.pick_node(gui.get_node("cross"),action.x, action.y) then
			gui.animate(self.root,gui.PROP_SCALE,vmath.vector3(0),gui.EASING_INSINE,0.5,0,function ()
				--COMMON.INPUT.acquire()
				SM.back()
			end)
		end
	end
end
---@param self SelfSlotModalGui
function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
