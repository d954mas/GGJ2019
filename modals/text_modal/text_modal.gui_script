local COMMON = require "libs.common"
local SM = require "Jester.jester"
local RichText = require "richtext.richtext"
local TextSettings = require "world.text_settings"
local GUI = require "gooey.themes.dirtylarry.dirtylarry"

---@class SelfTextModal

---@param self SelfTextModal
local function set_text(self,text)
	if self.text then
		for _,w in ipairs(self.text) do
			gui.delete_node(w.node)
		end
	end
	self.text = RichText.create(text,"Roboto", self.text_settings)
end

---@param self SelfTextModal
local function show_next_page(self)
	self.page = self.page + 1
	local page = self.dialog[self.page]
	if page then set_text(self,page.text)
	else
		SM.back()
	end
end

local function btn_ok_clicked(self)

end


---@param self SelfTextModal
function init(self)
	gui.set_render_order(2)
	self.title_lbl = gui.get_node("lbl_title")
	self.text_lbl = gui.get_node("lbl_text")
	self.root = gui.get_node("root")
	self.btn_ok = gui.get_node("btn_ok/bg")

	self.text_settings = TextSettings.base_left({parent = self.text_lbl,width = 500})
	COMMON.INPUT.acquire()

end
---@param self SelfTextModal
function final(self)
	COMMON.INPUT.release()
end
---@param self SelfTextModal
function update(self, dt)
end
---@param self SelfTextModal
function on_message(self, message_id, message, sender)
    if message_id == hash("show") then
		self.page = 0
		self.dialog = COMMON.GLOBAL.text_modal_input.dialog
		show_next_page(self)
    end
end
---@param self SelfTextModal
function on_input(self, action_id, action)
	if action_id == COMMON.HASHES.INPUT_TOUCH then
		--if gui.pick_node(self.root,action.x, action.y) then
		--else
			--SM.back()
		--end
		GUI.button("btn_ok", action_id, action, function ()
			show_next_page(self)
		end)
	end
end
---@param self SelfTextModal
function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
